# This is a basic workflow to help you get started with Actions

name: CI

env:
  APP_PORT: 3000
  APP_NAME: "push-noties"
  APP_ENTRYPOINT: "."
  INSTANCE_ID: $GITHUB_SHA

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  deploy:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a set of commands using the runners shell
      - name: setup ssh
        env:
          PRIVAET_KEY: ${{ secrets.STAGE_PRIVATE_KEY }}
          PUBLIC_KEY: ${{ secrets.STAGE_PUBLIC_KEY }}
        run: |
          mkdir -p ~/.ssh
          echo $PRIVAET_KEY > ~/.ssh/id_rsa
          ls -l ~/.ssh
          chmod 770 -R ~/.ssh
          eval "$(ssh-agent -s)"
          ssh-add ~/.ssh/id_rsa
          ssh-keyscan -H 'github@stage.luckydye.de' >> ~/.ssh/known_hosts
          ssh -v -i ~/.ssh/id_rsa -p 222 github@stage.luckydye.de ls -l /srv/apps
          echo "SSH SUCCESS"

      # Runs a set of commands using the runners shell
      - name: deploy to stage
        run: |
          cd $GITHUB_WORKSPACE
          rsync -ranv -e 'ssh -p 222' --progress . github@stage.luckydye.de:/srv/apps/$APP_NAME
          ssh -p 222 github@stage.luckydye.de ls -l /srv/apps/$APP_NAME
          ssh -p 222 github@stage.luckydye.de pm2 start $APP_ENTRYPOINT --port $APP_PORT --name $APP_NAME

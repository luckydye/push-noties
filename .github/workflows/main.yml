# This is a basic workflow to help you get started with Actions

name: CI

env:
  APP_PORT: 3000
  APP_NAME: "push-noties"
  APP_ENTRYPOINT: "."
  PRIVAET_KEY: ${{ secrets.STAGE_PRIVATE_KEY }}
  STAGE_HOST: stage.luckydye.de
  STAGE_USER: github
  STAGE_SSH_PORT: 222
  APP_DIRECTORY: /srv/apps

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  deploy:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a set of commands using the runners shell
      - name: build and deploy to stage
        run: |
          which ssh-agent || ( apt install openssh )
          eval $(ssh-agent -s)
          echo "${PRIVAET_KEY}" | ssh-add -
          mkdir ~/.ssh
          ssh-keyscan -p $STAGE_SSH_PORT -H $STAGE_HOST >> ~/.ssh/known_hosts
          ssh -p $STAGE_SSH_PORT $STAGE_USER@$STAGE_HOST ls -l $APP_DIRECTORY
          echo "SSH SUCCESS"
          cd $GITHUB_WORKSPACE
          npm ci
          npm run build
          ls -l
          rsync -rv --delete -e "ssh -p $STAGE_SSH_PORT" --exclude '.git/*' --exclude '.github/*' . $STAGE_USER@$STAGE_HOST:$APP_DIRECTORY/$APP_NAME
          ssh -p $STAGE_SSH_PORT $STAGE_USER@$STAGE_HOST ls -l $APP_DIRECTORY/$APP_NAME
          ssh -p $STAGE_SSH_PORT $STAGE_USER@$STAGE_HOST pm2 start $APP_ENTRYPOINT --port $APP_PORT --name $APP_NAME
